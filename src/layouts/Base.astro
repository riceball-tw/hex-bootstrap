---
import "@/styles/all.scss";
import Navbar from "@/components/app/Navbar.astro";
import Footer from "@/components/app/Footer.astro";
import CTACorner from "@/components/app/CTACorner.astro";
export interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1);
const isAtOrderPage = currentPath === `${import.meta.env.PUBLIC_URLBASE}/order`;

const textureUrl = `url(${
  import.meta.env.PUBLIC_URLBASE
}/assets/images/lightpaperfibers.png)`;
---

<script>
  import "bootstrap/dist/js/bootstrap.bundle.min";
</script>

<style define:vars={{ textureUrl }}>
  .texture {
    background-image: var(--textureUrl);
    background-attachment: fixed;
  }
</style>

<html lang="zh-Hant-TW">
  <head>
    <script
      defer
      src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"
      integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3"
      crossorigin="anonymous"
    ></script>

    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{`${title} | æ’¿åˆ°å¯¶`}</title>
    <meta name="description" content={description} />
    <link
      rel="icon"
      href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>ðŸ˜¸</text></svg>"
    />
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Kalam&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;700&display=swap"
      rel="stylesheet"
    />
  </head>

  <body class="texture">
    <Navbar />
    <slot />
    <Footer />
    {isAtOrderPage ? "" : <CTACorner />}
  </body>
</html>
